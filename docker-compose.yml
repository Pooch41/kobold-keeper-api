services:
  db:
    image: postgres:16-alpine
    container_name: postgres_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 5
      start_period: 2s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kobold_keeper_api
    command: /usr/local/bin/start.sh
    volumes:
      - .:/app
    ports:
      - "${APP_PORT}:8000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kobold_keeper_worker
    command: celery -A kobold_keeper worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always


  beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kobold_keeper_beat
    command: celery -A kobold_keeper beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

volumes:
  postgres_data:
