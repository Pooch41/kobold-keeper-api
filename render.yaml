# Blueprint file for deploying Kobold Keeper API on Render.
# Defines all core services: Web, Worker, Beat, Database, and Redis.

# --- 1. DATABASES ---
databases:
  - name: kobold-keeper-db
    plan: free
    databaseName: kobold_vault
    user: kobold_keeper

# --- 2. SERVICES ---
services:
  # 2. Redis Cache and Celery Broker
  - type: redis
    name: kobold-keeper-redis
    plan: free
    ipAllowList: []  # Allow connections from all your Render services

  # 3. Django Web Service (API)
  - type: web
    name: kobold-keeper-api
    env: docker
    plan: free
    healthCheckPath: /api/schema/
    envVars:
      - key: SERVICE_ROLE
        value: web
      - key: DATABASE_URL
        fromDatabase:
          name: kobold-keeper-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: kobold-keeper-redis
          type: redis
          property: connectionString
      - key: PORT
        value: 10000
      - key: SECRET_KEY
        sync: false
      - key: DEBUG
        value: "False"
      - key: DJANGO_ALLOWED_HOSTS
        value: "localhost,kobold-keeper-api.onrender.com"

  # 4. Celery Worker (Background Processor)
  - type: worker
    name: kobold-keeper-worker
    env: docker
    plan: free
    envVars:
      - key: SERVICE_ROLE
        value: worker
      - key: DATABASE_URL
        fromDatabase:
          name: kobold-keeper-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: kobold-keeper-redis
          type: redis
          property: connectionString
      - key: SECRET_KEY
        sync: false
      - key: DEBUG
        value: "False"

  # 5. Celery Beat (Scheduler/Cron)
  - type: worker
    name: kobold-keeper-beat
    env: docker
    plan: free
    envVars:
      - key: SERVICE_ROLE
        value: beat
      - key: DATABASE_URL
        fromDatabase:
          name: kobold-keeper-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: kobold-keeper-redis
          type: redis
          property: connectionString
      - key: SECRET_KEY
        sync: false
      - key: DEBUG
        value: "False"
